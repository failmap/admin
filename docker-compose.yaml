# docker-compose configuration to build a local development installation of the failmap platform.

version: "3"
services:
  # message broker to distribute tasks
  broker:
    image: redis
    # this containers logging is not really that interesting during development
    logging:
      driver: none
    # Not configuring persistent storage for broker. Restarting will cause all unfinished
    # tasks to be forgotten, instead of lingering around.
    ports:
      - 6379:6379

  # stateful storage
  database:
    image: mysql
    # this containers logging is not really that interesting during development
    logging:
      driver: none
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD:
      MYSQL_ROOT_PASSWORD: "${DB_ROOT_PASSWORD:-secret}"
      MYSQL_DATABASE: "${DB_NAME:-failmap}"
      MYSQL_USER: "${DB_USER:-failmap}"
      MYSQL_PASSWORD: "${DB_PASSWORD:-failmap}"
    ports:
      - 3306:3306
    # Configure database to persist accross restarts of the development environment.
    volumes:
      - ./dev_db/:/var/lib/mysql/

  # task executer
  worker:
    image: failmap/admin
    build:
      context: .
      dockerfile: "${PWD}/Dockerfile"
    links:
      - broker
      - database:mysql
    # celery dislikes running as root
    user: nobody
    environment:
      BROKER: redis://broker:6379/0
      DJANGO_DATABASE: production
      # let celery be a little more informative regarding console messages
      TERM: xterm-color
      DEBUG: 1
    # mount current source into container to allow changes to propagate without container rebuild
    volumes:
      - .:/source/
    # use watchdog to provide auto restart functionality on changed code
    entrypoint: [ '/source/tools/autoreload.sh', 'failmap-admin']
    command: [ "celery", "worker", "-l", "info", "-c", "6" ]

  # web interface
  admin:
    image: failmap/admin
    build:
      context: .
      dockerfile: "${PWD}/Dockerfile"
    links:
      - broker
      - database:mysql
    environment:
      BROKER: redis://broker:6379/0
      DJANGO_DATABASE: production
      UWSGI_PYTHON_AUTORELOAD: "yes"
      # django decides what to log based on type of console
      TERM: xterm-color
      DEBUG: 1
      # disable server static files from collectstatic during development
      UWSGI_STATIC_MAP:
    # mount current source into container to allow changes to propagate without container rebuild
    volumes:
      - .:/source/
    ports:
      - 8000:8000
    # use watchdog to provide auto restart functionality on changed code
    entrypoint: [ '/source/tools/autoreload.sh', 'failmap-admin']
    command: [ "runuwsgi" ]

  # migrate
  migrate:
    image: failmap/admin
    build:
      context: .
      dockerfile: "${PWD}/Dockerfile"
    links:
      - database:mysql
    volumes:
      - .:/source/
    environment:
      DJANGO_DATABASE: production
      # django decides what to log based on type of console
      TERM: xterm-color
    command: [ "migrate" ]
    # retry if action failes (ie: database container is not ready yet)
    restart: on-failure

  loaddata:
    image: failmap/admin
    build:
      context: .
      dockerfile: "${PWD}/Dockerfile"
    links:
      - database:mysql
    volumes:
      - .:/source/
    environment:
      DJANGO_DATABASE: production
      # django decides what to log based on type of console
      TERM: xterm-color
    command: [ "load-dataset", "development", "testdata" ]
    # retry if action failes (ie: database container is not ready yet)
    restart: on-failure

  flower:
    image: failmap/admin
    build:
      context: .
      dockerfile: "${PWD}/Dockerfile"
    links:
      - broker
    environment:
      BROKER: redis://broker:6379/0
      TERM: xterm-color
    ports:
      - 5555:5555
    command: [ "celery", "flower" ]
