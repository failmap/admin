[tool.poetry]
name = "websecmap"
version = "0.0.0"
description = ""

licence = "AGPLv3"

authors = [
    "Elger Jonker <elger.jonker@gmail.com>",
    "Johan Bloemberg <github@ijohan.nl>"
]

readme = "README.md"

repository = "https://gitlab.com/internet-cleanup-foundation/web-security-map"
homepage = "https://websecuritymap.org/"

keywords = ["security", "scanner", "web"]

packages = [
    { include = "websecmap" }
]

[tool.poetry.scripts]
websecmap = 'websecmap.manage:main'

# Below we define dependencies of websecmap.
# In general it is advised to pin to a certain version to prevent updates breaking builds. But since poetry uses a lockfile this allows us to keep developing on a known list of working version while debugging update issues seperate. We only pin packages when a problem cannot immediately be solved (eg: waiting for upstream release). The benefit is that we keep up better with new (security) releases without having to manually go through the list of all packages to check for updates.

# For information about package version syntax:
# https://github.com/sdispater/poetry/blob/master/docs/docs/versions.md

[tool.poetry.dependencies]
# support recent Python3 versions but at least the default download from: https://www.python.org/downloads/
python = ">=3.6, <=3.8"

django = "*"
django-jet = "*"
django-countries = "*"
django-leaflet = "*"  # geojson editor in admin
django-geojson = {version = "*", extras = ["field"]}  # geojson editor in admin
jsonfield = "*"
django-import-export = "*"
django-constance = {version = "*", extras = ["database"]}

pyyaml = "*"
typing = "*"

# use mozzila certificate bundle by default
certifi = "*"
pytz = "*"

# task processing framework
django-celery-beat = "*"
# celery 4.3+: https://github.com/celery/celery/issues/4500#issuecomment-400350526
celery = {version = "^4.3",extras = ["redis", "eventlet"]}
# flower < 0.9.3 conflicts with tornado >6.0
flower = ">=0.9.3"

# https://github.com/pi-bjl/celery-statsd/commit/5d61d7756f115dbf05a7eeb8314495b53ee1955e
django-statsd-mozilla = "*"

# scanner deps
requests = "*"

# dnsrecon / DNS scanning dependencies
dnspython = "*"
netaddr = "*"

# screenshots
Pillow = "*"
python-resize-image = "*"

# url parsing in the database, and several other locations
tldextract = "*"

# logging
colorlog = "*"

# for proxying external requests (mapbox)
django-proxy = "*"

# sentry client
raven = "*"

# allow recursive comparison of dictionaries
deepdiff = "*"

urllib3 = "*"

# loading json is faster in simplejson
# https://stackoverflow.com/questions/712791/what-are-the-differences-between-json-and-simplejson-python-modules
# needed for mapping reasons.
simplejson = "*"

# Remote worker TLS
pyopenssl = "*"

# static file collection/generation
django_compressor = "*"  # bundle javascript and css
csscompressor = "*"  # css compression

retry = "*"

# map, to reduce the number of points (Ramer-Douglas-Peucker algorithm)
rdp = "*"

wikidata = "*"  # downloading data from wikidata

django-nested-admin = "*"  # going deeper underground

# game requirements
django-crispy-forms = "*"
django-autocomplete-light = "*"

django-admin-sortable2 = "*"  # nice sorting in the admin, used in map configurations.

pyexcel-text = "^0.2.7"
# game team colors
validators = "^0.14.0"
django-colorful = "*"

# game, add multiple urls in one go.
django-select2 = "*"

# ISO country code conversion
iso3166 = "*"

# generic retry library
tenacity = "*"

# game
spectra = "*"  # fancy colors for teams
markdown = "*" # explanations for urls and organizations from the admin

# geocoding organizations from python
googlemaps = "*"

# allowing generic import of these types of files:
django-excel = "*"
pyexcel-xls = "*"
pyexcel-xlsx = "*"
pyexcel-ods = "*"

# database clients
mysqlclient = {version = "*", optional = true}
psycopg2 = {version = "*", optional = true}

# wsgi server
uwsgi = {version = "*", optional = true}
django-uwsgi = {version = "*"}

# Tools/dependencies required for development or running tests.
[tool.poetry.dev-dependencies]
autopep8 = "*"
autoflake = "*"
isort = {version = "*", extras = ["pyproject"]}
pylama = "*"
coverage = "*"
# waiting for https://github.com/getsentry/pytest-responses/pull/7
pytest = "<4.1.0"
pytest-cov = "*"
pytest-django = "*"
# counterpart of requests for mock responses
pytest-responses = ">=0.4.0"
# output logging when test fails
pytest-logging = "*"
django-coverage = "*"
django-extensions = "*"
django-debug-toolbar = "*"
django-debug-toolbar-request-history = "*"
pytest-mock = "*"
pytest-docker = "*"

# docs / readthedocs.io
sphinx = "*"
sphinx-autobuild = "*"
recommonmark = "*"
sphinx_rtd_theme = "*"

# tests (of scanners)
httmock = "*"
freezegun = "*"
colorama = "*"
pydotplus = "*"  # generating graphs with the docs command...

# used to restart celery worker on file changes
watchdog = {version = "~0.9.0", extras = ["watchmedo"]}

ipython = "*"  # websecmap shell -i ipython
django-cprofile-middleware = "*"
moviepy = "*"

[tool.poetry.extras]
deploy = ["mysqlclient","psycopg2","uwsgi"]

[build-system]
requires = ["poetry==0.12.15"]
