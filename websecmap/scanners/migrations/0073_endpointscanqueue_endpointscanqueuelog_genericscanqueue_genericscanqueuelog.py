# Generated by Django 2.2.10 on 2020-07-13 19:43

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('scanners', '0072_auto_20200506_1313'),
    ]

    operations = [
        migrations.CreateModel(
            name='GenericScanQueue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scanner', models.CharField(db_index=True,
                                             help_text='The scanner used to perform this scan. Options at time of designing: tlsq, https_headers...', max_length=60)),
                ('created_at_when', models.DateTimeField(blank=True, help_text='The time of queueing this scan.', null=True)),
                ('finished_at_when', models.DateTimeField(blank=True, help_text='The time of this scan to finish.', null=True)),
                ('state', models.CharField(db_index=True, help_text='The current state of the scan in progress. The normal lifecycle is: queued, being scanned, finished.In case of exceptions / errors, and the scan is returned, the state is error. A scan can also be cancelled, in that case it will not be picked up by the scan workers. A new scan can be scheduled.A new scan for something can only be scheduled if the state is finished or cancelled.', max_length=60)),
                ('state_message', models.CharField(blank=True,
                                                   help_text='Information about the status, for example error information.', max_length=250, null=True)),
                ('last_state_change', models.DateTimeField(blank=True,
                                                           help_text='The moment the state changed for this scan.', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='GenericScanQueueLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(blank=True, default='',
                                           help_text='The state that was registered at a certain moment in time.', max_length=255)),
                ('state_message', models.CharField(blank=True,
                                                   help_text='Information about the status, for example error information.', max_length=250, null=True)),
                ('last_state_update', models.DateTimeField(
                    blank=True, help_text='Last time this state was written to this field, for example when the endpoint was saved, butcontained the same data as before. In that case the current state is updated.', null=True)),
                ('at_when', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='EndpointScanQueue',
            fields=[
                ('genericscanqueue_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE,
                                                              parent_link=True, primary_key=True, serialize=False, to='scanners.GenericScanQueue')),
                ('endpoint', models.ForeignKey(blank=True, null=True,
                                               on_delete=django.db.models.deletion.CASCADE, to='scanners.Endpoint')),
            ],
            bases=('scanners.genericscanqueue',),
        ),
        migrations.CreateModel(
            name='EndpointScanQueueLog',
            fields=[
                ('genericscanqueuelog_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE,
                                                                 parent_link=True, primary_key=True, serialize=False, to='scanners.GenericScanQueueLog')),
                ('scan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scanners.EndpointScanQueue')),
            ],
            bases=('scanners.genericscanqueuelog',),
        ),
    ]
